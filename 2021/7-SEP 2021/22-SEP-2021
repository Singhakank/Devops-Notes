How many types of processes are there in linux?
There are 2 types of processes are there
1. foreground process
2. background process

What is the difference between a background process and a systemd init service, why and when we need to use systemd init service?
=====================================================================================================================================
systemd is an init system for linux operating system provided by GNU projects and many of the linux distros including ubuntu ships systemd as a default init system. (init = system bootup processes will be managed by the systemd)
There are lot of differences interms of running a process as a service against a background process.
  1. systemd init services would be started automatically during the boot time of the operating system whereas a background process has to be launched by the user of the computer manually after booting the operating system.
  2. if we run a process as a background process, the user has to monitor and restart incase of crash. whereas if we run it as a systemd service, monitoring and restarting incase of crash will be taken care by systemd init service itself.
  3. if we run a process as a background process, we need to use process related commands in monitoring and managing the process which is a errorneous and difficult job. user has to be careful in picking up the pid (process id) of the process to manage it, which sometimes could be wrongly pickedup. Instead register your program as a service with a name with systemd init system, so that we can manage the process through the systemd commands by referring the name of service easily.
    
There are 2 parts in working or using systemd init system.
1. Register a program as a Systemd init Service
2. Monitoring and Controlling the Systemd init service
here to monitoring and control the process systemd has provided commands for start, stop, restart, status, reload, disable and enable the service, so we dont need to use process management commands at all.
  
1. How to Register a program as a Service in Systemd init?
There are 2 types of systemd services are there.
  1.1 Services provided by the packaged installations
  1.2 System administrator services
  
1.1 Services provided by the packaged installations
There are lot of packaged software distributions which are provided by the vendors, which would be registered as systemd init services during the time of installation.
For eg. apache2 or ngnix are server softwares should run upon the boot of the operating system and should restart incase of crash, to ensure their availability the vendors by themself provide unit definition file as part of their packaged distribution, so that during the time of installation those will be registered as services automatically.
  
1.2 System administrator services
The System administrator may have certain program to be ran mandatorily to manage the system for eg. diskcheck, process monitoring or memory management utilities etc instead of running these mandatory programs as background process, he can register them as systemd services manually once, so that those will be executed during bootup and managed by systemd itself.
  
How to register a program as a systemd service?
To manage our program by systemd, we need to provide the information about our program to systemd init system by writing a service unit file.
We need to follow standard structure in writing the service unit file describing the program and place unit files in a designated location (pre-defined location), so that systemd init system can read and host our programs as services.
  
The service unit file usually ends withan extension as "filename.service" and should be placed under the below locations
1. /usr/lib/systemd/system = all the packaged services service unit files are placed here
2. /etc/systemd/system = system administrator service unit files are placed here

The service unit file contains 3 sections
1. Unit
information about the service is described in this secion. For eg. description the service which appears while managing the service. when does the service should be started. what are the required services inorder to run this service. 
description, order and dependencies

2. Service
Commands for managing the program like start, stop and restart. Type of the Service, how to manage it.
how to run and manage  
  
3. Install
Installation instructions on how to install and run the service.
when it should be installed























  
























  
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    